name: Generate Test Suite and Postman Collection

on:
  # Runs on pushes to main and develop branches
  push:
    branches: 
      - main
      - develop
      - fix-missing-snapshots
    paths:
      - 'scripts/generate_test_resources.py'
      - 'scripts/generate_postman_collection.py'
      - 'input/fsh/profiles/**'
      - '.github/workflows/generate-test-suite.yml'
  
  # Allows manual trigger from Actions tab
  workflow_dispatch:
    inputs:
      request_delay:
        description: 'Delay in milliseconds between Postman requests'
        required: false
        type: number
        default: 500
      include_auth:
        description: 'Include Bearer token authentication'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  
jobs:
  generate-test-suite:
    name: Generate Koppeltaal 2.0 Test Suite
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Add any required Python packages here if needed
          
      - name: Generate test resources
        run: |
          echo "🧪 Generating Koppeltaal 2.0 test resources..."
          python scripts/generate_test_resources.py
          
      - name: List generated test resources
        run: |
          echo "📁 Generated test resources:"
          find test-resources -name "*.json" -type f | sort
          echo ""
          echo "Total test resources: $(find test-resources -name "*.json" -type f | wc -l)"
          
      - name: Generate Postman collection
        run: |
          echo "📮 Generating Postman collection..."
          DELAY="${{ github.event.inputs.request_delay || 500 }}"
          AUTH_FLAG=""
          if [ "${{ github.event.inputs.include_auth }}" = "true" ]; then
            AUTH_FLAG="--include-auth"
          fi
          python scripts/generate_postman_collection.py --delay "$DELAY" $AUTH_FLAG
          
      - name: Display collection info
        run: |
          echo "📊 Collection statistics:"
          echo "- Total requests: $(jq '.item | map(.item[].name) | length' koppeltaal-tests.postman_collection.json)"
          echo "- Resource types: $(jq '.item[].name' koppeltaal-tests.postman_collection.json | tr '\n' ', ' | sed 's/,$//')"
          echo "- Request delay: ${{ github.event.inputs.request_delay || 500 }}ms"
          echo "- Auth included: ${{ github.event.inputs.include_auth || false }}"
          
      - name: Upload test resources as artifact
        uses: actions/upload-artifact@v4
        with:
          name: koppeltaal-test-resources
          path: test-resources/
          retention-days: 30
          
      - name: Upload Postman collection as artifact
        uses: actions/upload-artifact@v4
        with:
          name: postman-collection
          path: |
            koppeltaal-tests.postman_collection.json
            run-newman-tests.sh
          retention-days: 30
          
      - name: Create release assets (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Create a zip of test resources
          zip -r koppeltaal-test-resources.zip test-resources/
          
          # Create a bundle with Postman collection and Newman script
          zip postman-test-suite.zip koppeltaal-tests.postman_collection.json run-newman-tests.sh
          
      - name: Upload release assets (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            koppeltaal-test-resources.zip
            postman-test-suite.zip
            koppeltaal-tests.postman_collection.json
            run-newman-tests.sh
          
  validate-test-suite:
    name: Validate Test Suite with Newman
    runs-on: ubuntu-latest
    needs: generate-test-suite
    if: success()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download Postman collection artifact
        uses: actions/download-artifact@v4
        with:
          name: postman-collection
          
      - name: Download test resources artifact
        uses: actions/download-artifact@v4
        with:
          name: koppeltaal-test-resources
          path: test-resources/
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Newman
        run: npm install -g newman
        
      - name: Validate Postman collection structure
        run: |
          echo "✅ Validating Postman collection structure..."
          # Check if collection is valid JSON
          jq empty koppeltaal-tests.postman_collection.json
          
          # Check collection has required structure
          jq -e '.info.name' koppeltaal-tests.postman_collection.json > /dev/null
          jq -e '.item | length > 0' koppeltaal-tests.postman_collection.json > /dev/null
          
          echo "Collection validation passed!"
          
      - name: Run Newman tests (dry run)
        if: false  # Disabled by default as it requires a FHIR server
        run: |
          echo "🧪 Running Newman tests..."
          # This would run against a test FHIR server if available
          # newman run koppeltaal-tests.postman_collection.json \
          #   --env-var "fhir_base_url=${{ secrets.TEST_FHIR_SERVER_URL }}" \
          #   --reporters cli,json \
          #   --reporter-json-export newman-results.json
          
      - name: Create summary
        run: |
          echo "## 📋 Test Suite Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📁 Test Resources" >> $GITHUB_STEP_SUMMARY
          echo "- Total resources: $(find test-resources -name "*.json" -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- Resource types: $(ls -d test-resources/*/ | xargs -n1 basename | tr '\n' ', ' | sed 's/,$//')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📮 Postman Collection" >> $GITHUB_STEP_SUMMARY
          echo "- Collection name: $(jq -r '.info.name' koppeltaal-tests.postman_collection.json)" >> $GITHUB_STEP_SUMMARY
          echo "- Total requests: $(jq '.item | map(.item[].name) | length' koppeltaal-tests.postman_collection.json)" >> $GITHUB_STEP_SUMMARY
          echo "- Request delay: ${{ github.event.inputs.request_delay || 500 }}ms" >> $GITHUB_STEP_SUMMARY
          echo "- Authentication: ${{ github.event.inputs.include_auth || false }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📥 Downloads" >> $GITHUB_STEP_SUMMARY
          echo "- [Postman Collection](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Test Resources](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY